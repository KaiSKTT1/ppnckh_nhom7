# 📘 Đề Cương Nghiên Cứu: Phân Đoạn Polyp Trong Ảnh Nội Soi Đại Tràng Sử Dụng U-Net Kết Hợp CBAM

---

## 📌 Chương 1: TỔNG QUAN ĐỀ CƯƠNG

### 1.1 Giới thiệu về chủ đề nghiên cứu
Phân đoạn hình ảnh y khoa là một lĩnh vực quan trọng trong chẩn đoán y tế, đặc biệt là phân đoạn polyp từ hình ảnh nội soi đại tràng. Polyp là những tổn thương có thể phát triển thành ung thư, và việc phát hiện chính xác chúng từ hình ảnh nội soi đóng vai trò quan trọng trong:
- Chẩn đoán sớm
- Cải thiện kết quả điều trị
- Giảm thời gian và chi phí nội soi
- Hỗ trợ giáo dục y khoa và nghiên cứu

Tuy nhiên, polyp rất đa dạng về **hình dạng, kích thước và màu sắc**, và thường tương đồng với mô xung quanh, gây khó khăn trong phân đoạn.

Nghiên cứu này đề xuất một phiên bản cải tiến của **U-Net**, tích hợp **Convolutional Block Attention Module (CBAM)** để:
- Tăng khả năng trích xuất đặc trưng
- Tập trung vào vùng quan trọng
- Loại bỏ nhiễu không cần thiết
- Cải thiện phân đoạn polyp nhỏ hoặc phức tạp

---

### 1.2 Mục tiêu nghiên cứu
**Mục tiêu chung:**  
Phát triển mô hình U-Net cải tiến tích hợp CBAM để nâng cao hiệu suất phân đoạn polyp.

**Mục tiêu cụ thể:**
1. Tăng cường trích xuất đặc trưng cục bộ qua CBAM  
2. Đánh giá mô hình trên tập dữ liệu Kvasir-SEG và CVC-ClinicDB  
3. So sánh hiệu suất với U-Net tiêu chuẩn và các phương pháp hiện đại khác

---

### 1.3 Câu hỏi nghiên cứu
- Tích hợp CBAM vào U-Net ảnh hưởng thế nào đến độ chính xác phân đoạn?
- Mô hình có xử lý tốt các polyp đa dạng không?
- CBAM giúp tập trung vào đặc trưng quan trọng ra sao?

---

### 1.4 Giả thuyết nghiên cứu
- **H1**: U-Net + CBAM đạt độ chính xác cao hơn U-Net chuẩn  
- **H2**: Mô hình vượt trội về Dice Score và mIOU trên các dataset chuẩn

---

### 1.5 Phạm vi nghiên cứu
- **Nội dung:** Phân đoạn polyp 2D từ ảnh nội soi  
- **Dữ liệu:** Kvasir-SEG (1000 ảnh), CVC-ClinicDB (612 ảnh)  
- **Ứng dụng:** Hỗ trợ chẩn đoán và tiềm năng mở rộng cho các nhiệm vụ y tế khác

---

### 1.6 Ý nghĩa của nghiên cứu
- **Khoa học:** Làm rõ vai trò của attention mechanism trong phân đoạn ảnh y khoa  
- **Thực tiễn:** Giải pháp tiết kiệm tài nguyên, phù hợp hệ thống hỗ trợ chẩn đoán

---

## 🧠 Chương 2: CƠ SỞ LÝ THUYẾT

### 2.1 Khái niệm cơ bản
- **Phân đoạn hình ảnh:** Tách ảnh thành vùng có ý nghĩa (đối tượng cụ thể)  
- **U-Net:** Mạng CNN encoder-decoder, có skip connections giúp phục hồi chi tiết không gian

---

### 2.2 Mô-đun CBAM (Convolutional Block Attention Module)
- **Channel Attention:** Tập trung vào "cái gì" quan trọng  
- **Spatial Attention:** Tập trung vào "ở đâu" quan trọng  
- CBAM = Channel + Spatial, giúp làm nổi bật đặc trưng quan trọng cả về không gian và chiều kênh

---

### 2.3 Thách thức trong phân đoạn polyp
- Polyp đa dạng về hình dạng, kích thước, màu sắc  
- Rất giống mô xung quanh → khó phân ranh giới  
→ Cần mô hình có khả năng trích xuất và tập trung vào chi tiết chính xác

---

### 2.4 Các nghiên cứu liên quan
- **U-Net (2015):** Kiến trúc nền tảng phân đoạn  
- **CBAM (2018):** Mô-đun attention nhẹ, hiệu quả  
- **Residual Blocks:** Khắc phục vanishing gradient  
- **Self-Attention:** Hiểu toàn cục tốt nhưng nặng tính toán

---

## 🧪 Chương 3: VẬT LIỆU VÀ PHƯƠNG PHÁP

### 3.1 Vật liệu

- **Tập dữ liệu:**
  - Kvasir-SEG: 1000 ảnh, độ phân giải 332×487 → 1920×1072
  - CVC-ClinicDB: 612 ảnh, độ phân giải 384×288

- **Thiết bị:** GPU NVIDIA Tesla P100  
- **Phần mềm:** Python, TensorFlow, Albumentations (tăng cường dữ liệu)

---

### 3.2 Phương pháp

#### Thiết kế nghiên cứu
Thực nghiệm với mô hình **U-Net Focus + CBAM**, đánh giá hiệu suất trên 2 dataset

#### Quy trình:
1. **Chuẩn bị dữ liệu:**
   - Chia: 80% train / 10% val / 10% test
   - Augmentation: Lật, xoay, thay đổi màu (Color Jitter)

2. **Mô hình đề xuất:**
   - **Encoder:** CBAM sau mỗi block trước downsampling  
   - **Bottleneck:** Residual Blocks  
   - **Decoder:** CBAM sau upsampling + skip connection  
   - **Output:** Conv 1×1 → mặt nạ nhị phân  

3. **Huấn luyện:**
   - Input size: 352×352×3  
   - Learning rate: 1e-4  
   - Optimizer: AdamW  
   - Loss: Dice Loss  
   - Epochs: 500  
   - Batch size: 4  

4. **Đánh giá:**
   - **Chỉ số:** Dice Score (DSC), Mean IOU (mIOU)

---

## 📊 Chương 4: THỰC NGHIỆM & KẾT QUẢ

### 4.1 Thiết lập thực nghiệm
- GPU: NVIDIA Tesla P100  
- Dataset chia: 80% train, 10% val, 10% test  
- Đánh giá trên test set của Kvasir-SEG và CVC-ClinicDB

---

### 4.2 Kết quả Ablation Study

| Mô hình                        | CVC-ClinicDB (DSC / mIOU) | Kvasir-SEG (DSC / mIOU) |
|-------------------------------|----------------------------|--------------------------|
| U-Net Focus + CBAM Encoder    | 0.911 / 0.836              | 0.862 / 0.762            |
| U-Net Focus + CBAM Decoder    | 0.919 / 0.852              | 0.883 / 0.801            |
| U-Net Focus + CBAM Enc/Dec    | **0.935 / 0.877**          | **0.891 / 0.803**        |

➡️ CBAM ở cả encoder và decoder đạt kết quả tốt nhất

---

### 4.3 So sánh với các mô hình hiện đại

| Mô hình              | Năm  | CVC-ClinicDB (DSC / mIOU) | Kvasir-SEG (DSC / mIOU) |
|----------------------|------|----------------------------|--------------------------|
| U-Net                | 2015 | 0.710 / 0.627              | 0.818 / 0.746            |
| ResUnet++            | 2019 | 0.763 / 0.701              | 0.813 / 0.793            |
| HRNetV2              | 2019 | 0.778 / 0.636              | 0.853 / 0.744            |
| DCRNet               | 2022 | 0.856 / 0.788              | 0.886 / 0.825            |
| MSRF-Net             | 2022 | 0.906 / 0.828              | 0.851 / 0.740            |
| **U-Net + CBAM**     | 2024 | **0.935 / 0.877**          | **0.891 / 0.803**        |

---

### 4.4 Phân tích & Thảo luận
- **CBAM hiệu quả:** Grad-CAM cho thấy mô hình tập trung rõ hơn vào ranh giới polyp  
- **Ưu điểm:** Nhạy hơn với polyp nhỏ, tiết kiệm tài nguyên so với Transformer  
- **Thực tiễn:** Phù hợp với ứng dụng lâm sàng

---

### 4.5 Kết luận & Hướng phát triển

- ✅ **Kết luận:** U-Net + CBAM nâng cao rõ rệt độ chính xác phân đoạn polyp  
- 🔬 **Tương lai:** Mở rộng sang phân đoạn khối u, thử nghiệm attention nâng cao hơn

---

> 📂 *Mã nguồn, dữ liệu huấn luyện và mô hình sẽ được cập nhật trong repo.*

